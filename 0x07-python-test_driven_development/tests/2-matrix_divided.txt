import unittest
from matrix_divided import matrix_divided

class TestMatrixDivided(unittest.TestCase):

    def test_matrix_divided(self):
        matrix = [
            [1, 2, 3],
            [4, 5, 6]
        ]
        expected_result = [
            [0.33, 0.67, 1.0],
            [1.33, 1.67, 2.0]
        ]
        self.assertEqual(matrix_divided(matrix, 3), expected_result)
        self.assertEqual(matrix, [[1, 2, 3], [4, 5, 6]])

        matrix = [
            [10, 20],
            [30, 40],
            [50, 60]
        ]
        expected_result = [
            [2.5, 5.0],
            [7.5, 10.0],
            [12.5, 15.0]
        ]
        self.assertEqual(matrix_divided(matrix, 4), expected_result)
        self.assertEqual(matrix, [[10, 20], [30, 40], [50, 60]])

        matrix = [
            [1.5, 2.5, 3.5],
            [4.5, 5.5, 6.5]
        ]
        expected_result = [
            [0.5, 0.83, 1.17],
            [1.5, 1.83, 2.17]
        ]
        self.assertEqual(matrix_divided(matrix, 3), expected_result)
        self.assertEqual(matrix, [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]])

        self.assertRaises(TypeError, matrix_divided, [[1, 2], [3, 4, 5]], 2)
        self.assertRaises(TypeError, matrix_divided, [[1, 2], [3, 4]], "div")
        self.assertRaises(ZeroDivisionError, matrix_divided, [[1, 2], [3, 4]], 0)

if __name__ == '__main__':
    unittest.main()
