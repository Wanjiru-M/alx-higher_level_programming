import unittest
from matrix_divided import matrix_divided

class TestMatrixDivided(unittest.TestCase):

    def test_matrix_divided_valid_division(self):
        matrix = [[3]]
        expected_result = [[1.0]]
        self.assertEqual(matrix_divided(matrix, 3), expected_result)
        self.assertEqual(matrix, [[3]])

        matrix = [[3, 9], [12, 15]]
        expected_result = [[-1.0, -2.67], [-4.0, -3.67]]
        self.assertEqual(matrix_divided(matrix, -3), expected_result)
        self.assertEqual(matrix, [[3, 9], [12, 15]])

    def test_matrix_divided_zero_division(self):
        matrix = [[3, 9], [12, 15]]
        self.assertRaises(ZeroDivisionError, matrix_divided, matrix, 0)

    def test_matrix_divided_invalid_matrix(self):
        matrix = [[3, "9"], [15, 3]]
        self.assertRaises(TypeError, matrix_divided, matrix, 3)

    def test_matrix_divided_invalid_div_type(self):
        matrix = [[3, 9], [12, 15]]
        self.assertRaises(TypeError, matrix_divided, matrix, "div")

    def test_matrix_divided_invalid_matrix_type(self):
        matrix = "not a list of lists of integers"
        self.assertRaises(TypeError, matrix_divided, matrix, 3)

    def test_matrix_divided_invalid_matrix_size(self):
        matrix = [[3, 9], [12, 15, 3]]
        self.assertRaises(TypeError, matrix_divided, matrix, 3)

if __name__ == '__main__':
    unittest.main()
